"High Income"
)
# Create the IncomeCategory variable
SurveyData$IncomeCategory <-
cut(
SurveyData$HouseholdIncome,
breaks = breaks,
labels = labels,
include.lowest = TRUE
)
# add var to the dataframe
write.csv(SurveyData, "SurveyData.csv", row.names = FALSE)
library(dplyr)
# Calculate the TotalTechBenefit by summing all columns that start with 'Benefit'
SurveyData <- SurveyData %>%
mutate(TotalTechBenefit = rowSums(select(., starts_with("Benefit")), na.rm = TRUE))
library(renv)
# Using renv restore function to get dependencies
restore()
library(readr)
library(here)
SurveyData <- read_csv(here("data","SurveyData.csv"), show_col_types = FALSE)
library(skimr)
skim(SurveyData)
library(skimr)
if (interactive()) {
View(head(SurveyData))
View(tail(SurveyData))
View(SurveyData)
}
library(ggplot2)
# Age distribution Histogram
ggplot(SurveyData, aes(x = Age)) +
geom_histogram(
bins = 20,
fill = "blue",
color = "black",
alpha = 0.7
) +
labs(x = "Age", y = "Count", title = "Distribution of Respondents' Age") +
theme_minimal()
library(ggplot2)
library(dplyr)
# Gender distribution pie chart
SurveyData %>%
count(Gender) %>%
ggplot(aes(x = "", y = n, fill = Gender)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
scale_fill_brewer(palette = "Pastel1") +
theme_void() +
labs(title = "Gender Distribution") +
geom_text(aes(label = scales::percent(n / sum(n), accuracy = 0.1)),
position = position_stack(vjust = 0.5)
)
# Calculating mean and median age
mean_age <-
mean(SurveyData$Age, na.rm = TRUE) # na.rm = TRUE ensures that NA values are removed
median_age <- median(SurveyData$Age, na.rm = TRUE)
cat(sprintf("Mean Age: %.2f, Median Age: %.2f", mean_age, median_age))
library(ggplot2)
# Histogram plot of Age with color based on Gender
SurveyData$Gender <- factor(SurveyData$Gender, levels = c("Male", "Female"))
ggplot(data = SurveyData, aes(x = Age, fill = Gender)) +
geom_histogram(
position = "stack",
binwidth = 3,
colour = "grey"
) +
labs(title = "Number of Male and Female by Age") +
theme_minimal()
# Define labels for the income categories
breaks <- c(0, 200000, 600000, 1200000, 2000000, Inf)
labels <-
c(
"Low Income",
"Lower-Middle Income",
"Middle-Middle Income",
"Upper-Middle Income",
"High Income"
)
# Create the IncomeCategory variable
SurveyData$IncomeCategory <-
cut(
SurveyData$HouseholdIncome,
breaks = breaks,
labels = labels,
include.lowest = TRUE
)
# add var to the dataframe
write.csv(SurveyData, "SurveyData.csv", row.names = FALSE)
library(dplyr)
# TotalTechConcern calculated by summing all columns that start with 'Risk'
SurveyData <- SurveyData %>%
mutate(TotalTechConcern = rowSums(select(., starts_with("Risk"))))
# add var to the dataframe
write.csv(SurveyData, "SurveyData.csv", row.names = FALSE)
library(dplyr)
# Calculate the TotalTechBenefit by summing all columns that start with 'Benefit'
SurveyData <- SurveyData %>%
mutate(TotalTechBenefit = rowSums(select(., starts_with("Benefit")), na.rm = TRUE))
# add var to the dataframe
write.csv(SurveyData, "SurveyData.csv", row.names = FALSE)
library(ggplot2)
ggplot(data = SurveyData, aes(x = Age, y = TotalTechConcern)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", color = "blue") +
labs(
x = "Age", y = "Total Tech Concern",
title = "Correlation between Age and Total Tech Concern"
) +
theme_minimal()
# Calculate and print the correlation coefficient
correlation <-
cor.test(SurveyData$Age, SurveyData$TotalTechConcern, use = "complete.obs") # use handles missing values
print(correlation)
library(ggplot2)
ggplot(data = SurveyData, aes(x = IncomeCategory, y = TotalTechConcern)) +
geom_boxplot() +
labs(
x = "Income Category", y = "Total Tech Concern",
title = "Total Tech Concern across Income Categories"
) +
theme_minimal()
# ANOVA to test if differences in TotalTechConcern are statistically significant across IncomeCategory
anova_result <- aov(TotalTechConcern ~ IncomeCategory, data = SurveyData)
summary(anova_result)
---
title: "Data Science Project EDA"
library(renv)
# Using renv restore function to get dependencies
restore()
library(readr)
library(here)
SurveyData <- read_csv(here("data","SurveyData.csv"), show_col_types = FALSE)
library(skimr)
skim(SurveyData)
library(skimr)
if (interactive()) {
View(head(SurveyData))
View(tail(SurveyData))
View(SurveyData)
}
library(ggplot2)
# Age distribution Histogram
ggplot(SurveyData, aes(x = Age)) +
geom_histogram(
bins = 20,
fill = "blue",
color = "black",
alpha = 0.7
) +
labs(x = "Age", y = "Count", title = "Distribution of Respondents' Age") +
theme_minimal()
library(ggplot2)
library(dplyr)
# Gender distribution pie chart
SurveyData %>%
count(Gender) %>%
ggplot(aes(x = "", y = n, fill = Gender)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
scale_fill_brewer(palette = "Pastel1") +
theme_void() +
labs(title = "Gender Distribution") +
geom_text(aes(label = scales::percent(n / sum(n), accuracy = 0.1)),
position = position_stack(vjust = 0.5)
)
# Calculating mean and median age
mean_age <-
mean(SurveyData$Age, na.rm = TRUE) # na.rm = TRUE ensures that NA values are removed
median_age <- median(SurveyData$Age, na.rm = TRUE)
cat(sprintf("Mean Age: %.2f, Median Age: %.2f", mean_age, median_age))
library(ggplot2)
# Histogram plot of Age with color based on Gender
SurveyData$Gender <- factor(SurveyData$Gender, levels = c("Male", "Female"))
ggplot(data = SurveyData, aes(x = Age, fill = Gender)) +
geom_histogram(
position = "stack",
binwidth = 3,
colour = "grey"
) +
labs(title = "Number of Male and Female by Age") +
theme_minimal()
# Define labels for the income categories
breaks <- c(0, 200000, 600000, 1200000, 2000000, Inf)
labels <-
c(
"Low Income",
"Lower-Middle Income",
"Middle-Middle Income",
"Upper-Middle Income",
"High Income"
)
# Create the IncomeCategory variable
SurveyData$IncomeCategory <-
cut(
SurveyData$HouseholdIncome,
breaks = breaks,
labels = labels,
include.lowest = TRUE
)
# add var to the dataframe
write.csv(SurveyData, "SurveyData.csv", row.names = FALSE)
library(dplyr)
# TotalTechConcern calculated by summing all columns that start with 'Risk'
SurveyData <- SurveyData %>%
mutate(TotalTechConcern = rowSums(select(., starts_with("Risk"))))
# add var to the dataframe
write.csv(SurveyData, "SurveyData.csv", row.names = FALSE)
library(dplyr)
# Calculate the TotalTechBenefit by summing all columns that start with 'Benefit'
SurveyData <- SurveyData %>%
mutate(TotalTechBenefit = rowSums(select(., starts_with("Benefit")), na.rm = TRUE))
# add var to the dataframe
write.csv(SurveyData, "SurveyData.csv", row.names = FALSE)
library(ggplot2)
ggplot(data = SurveyData, aes(x = Age, y = TotalTechConcern)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", color = "blue") +
labs(
x = "Age", y = "Total Tech Concern",
title = "Correlation between Age and Total Tech Concern"
) +
theme_minimal()
# Calculate and print the correlation coefficient
correlation <-
cor.test(SurveyData$Age, SurveyData$TotalTechConcern, use = "complete.obs") # use handles missing values
print(correlation)
library(ggplot2)
ggplot(data = SurveyData, aes(x = IncomeCategory, y = TotalTechConcern)) +
geom_boxplot() +
labs(
x = "Income Category", y = "Total Tech Concern",
title = "Total Tech Concern across Income Categories"
) +
theme_minimal()
# ANOVA to test if differences in TotalTechConcern are statistically significant across IncomeCategory
anova_result <- aov(TotalTechConcern ~ IncomeCategory, data = SurveyData)
summary(anova_result)
---
title: "Data Science Project EDA"
---
title: "Data Science Project EDA"
---
title: "Data Science Project EDA "
library(renv)
# Using renv restore function to get dependencies
restore()
library(ggplot2)
ggplot(data = SurveyData, aes(x = Age, y = TotalTechConcern)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", color = "blue") +
labs(
x = "Age", y = "Total Tech Concern",
title = "Correlation between Age and Total Tech Concern"
) +
theme_minimal()
# Calculate and print the correlation coefficient
correlation <-
cor.test(SurveyData$Age, SurveyData$TotalTechConcern, use = "complete.obs") # use handles missing values
print(correlation)
library(ggplot2)
ggplot(data = SurveyData, aes(x = IncomeCategory, y = TotalTechConcern)) +
geom_boxplot() +
labs(
x = "Income Category", y = "Total Tech Concern",
title = "Total Tech Concern across Income Categories"
) +
theme_minimal()
# ANOVA to test if differences in TotalTechConcern are statistically significant across IncomeCategory
anova_result <- aov(TotalTechConcern ~ IncomeCategory, data = SurveyData)
summary(anova_result)
library(ggplot2)
ggplot(data = SurveyData, aes(x = Age, y = TotalTechConcern)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", color = "blue") +
labs(
x = "Age", y = "Total Tech Concern",
title = "Correlation between Age and Total Tech Concern"
) +
theme_minimal()
# Calculate and print the correlation coefficient
correlation <-
cor.test(SurveyData$Age, SurveyData$TotalTechConcern, use = "complete.obs") # use handles missing values
print(correlation)
library(dplyr)
# Calculate the TotalTechBenefit by summing all columns that start with 'Benefit'
SurveyData <- SurveyData %>%
mutate(TotalTechBenefit = rowSums(select(., starts_with("Benefit")), na.rm = TRUE))
# add var to the dataframe
write.csv(SurveyData, "SurveyData.csv", row.names = FALSE)
library(ggplot2)
ggplot(data = SurveyData, aes(x = Age, y = TotalTechConcern)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", color = "blue") +
labs(
x = "Age", y = "Total Tech Concern",
title = "Correlation between Age and Total Tech Concern"
) +
theme_minimal()
# Calculate and print the correlation coefficient
correlation <-
cor.test(SurveyData$Age, SurveyData$TotalTechConcern, use = "complete.obs") # use handles missing values
print(correlation)
library(ggplot2)
# Histogram plot of Age with color based on Gender
SurveyData$Gender <- factor(SurveyData$Gender, levels = c("Male", "Female"))
ggplot(data = SurveyData, aes(x = Age, fill = Gender)) +
geom_histogram(
position = "stack",
binwidth = 3,
colour = "grey"
) +
labs(title = "Number of Male and Female by Age") +
theme_minimal()
# Calculating mean and median age
mean_age <-
mean(SurveyData$Age, na.rm = TRUE) # na.rm = TRUE ensures that NA values are removed
median_age <- median(SurveyData$Age, na.rm = TRUE)
cat(sprintf("Mean Age: %.2f, Median Age: %.2f", mean_age, median_age))
library(ggplot2)
library(dplyr)
# Gender distribution pie chart
SurveyData %>%
count(Gender) %>%
ggplot(aes(x = "", y = n, fill = Gender)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
scale_fill_brewer(palette = "Pastel1") +
theme_void() +
labs(title = "Gender Distribution") +
geom_text(aes(label = scales::percent(n / sum(n), accuracy = 0.1)),
position = position_stack(vjust = 0.5)
)
library(ggplot2)
# Age distribution Histogram
ggplot(SurveyData, aes(x = Age)) +
geom_histogram(
bins = 20,
fill = "blue",
color = "black",
alpha = 0.7
) +
labs(x = "Age", y = "Count", title = "Distribution of Respondents' Age") +
theme_minimal()
# Define labels for the income categories
breaks <- c(0, 200000, 600000, 1200000, 2000000, Inf)
labels <-
c(
"Low Income",
"Lower-Middle Income",
"Middle-Middle Income",
"Upper-Middle Income",
"High Income"
)
# Create the IncomeCategory variable
SurveyData$IncomeCategory <-
cut(
SurveyData$HouseholdIncome,
breaks = breaks,
labels = labels,
include.lowest = TRUE
)
# Define labels for the income categories
breaks <- c(0, 200000, 600000, 1200000, 2000000, Inf)
labels <-
c(
"Low Income",
"Lower-Middle Income",
"Middle-Middle Income",
"Upper-Middle Income",
"High Income"
)
# Create the IncomeCategory variable
SurveyData$IncomeCategory <-
cut(
SurveyData$HouseholdIncome,
breaks = breaks,
labels = labels,
include.lowest = TRUE
)
library(renv)
# Using renv restore function to get dependencies
restore()
library(readr)
library(here)
SurveyData <- read_csv(here("data","SurveyData.csv"), show_col_types = FALSE)
library(skimr)
skim(SurveyData)
library(skimr)
if (interactive()) {
View(head(SurveyData))
View(tail(SurveyData))
View(SurveyData)
}
library(ggplot2)
# Age distribution Histogram
ggplot(SurveyData, aes(x = Age)) +
geom_histogram(
bins = 20,
fill = "blue",
color = "black",
alpha = 0.7
) +
labs(x = "Age", y = "Count", title = "Fig. 1: Distribution of Respondents' Age") +
theme_minimal()
# Calculating mean and median age
mean_age <-
mean(SurveyData$Age, na.rm = TRUE) # na.rm = TRUE ensures that NA values are removed
median_age <- median(SurveyData$Age, na.rm = TRUE)
cat(sprintf("Mean Age: %.2f, Median Age: %.2f", mean_age, median_age))
library(ggplot2)
# Histogram plot of Age with color based on Gender
SurveyData$Gender <- factor(SurveyData$Gender, levels = c("Male", "Female"))
ggplot(data = SurveyData, aes(x = Age, fill = Gender)) +
geom_histogram(
position = "stack",
binwidth = 3,
colour = "grey"
) +
labs(title = "Fig. 3: Number of Male and Female by Age") +
theme_minimal()
# Define labels for the income categories
breaks <- c(0, 200000, 600000, 1200000, 2000000, Inf)
labels <-
c(
"Low Income",
"Lower-Middle Income",
"Middle-Middle Income",
"Upper-Middle Income",
"High Income"
)
# Create the IncomeCategory variable
SurveyData$IncomeCategory <-
cut(
SurveyData$HouseholdIncome,
breaks = breaks,
labels = labels,
include.lowest = TRUE
)
library(dplyr)
# TotalTechConcern calculated by summing all columns that start with 'Risk'
SurveyData <- SurveyData %>%
mutate(TotalTechConcern = rowSums(select(., starts_with("Risk"))))
library(dplyr)
# Calculate the TotalTechBenefit by summing all columns that start with 'Benefit'
SurveyData <- SurveyData %>%
mutate(TotalTechBenefit = rowSums(select(., starts_with("Benefit")), na.rm = TRUE))
View(SurveyData)
ggplot(data = SurveyData, aes(x = IncomeCategory, y = TotalTechConcern)) +
geom_boxplot() +
labs(
x = "Income Category", y = "Total Tech Concern",
title = "Fig. 5: Total Tech Concern across Income Categories"
) +
theme_minimal()
---
title: "Data Science Project EDA "
SurveyData <- read_csv(here("data","SurveyData.csv"), show_col_types = FALSE)
SurveyData <- read_csv(here("data","SurveyData.csv"), show_col_types = FALSE)
# Using renv restore function to get dependencies
library(renv)
restore()
library(ggplot2)
library(dplyr)
library(readr)
library(here)
library(skimr)
SurveyData <- read_csv(here("data","SurveyData.csv"), show_col_types = FALSE)
ggplot(data = SurveyData, aes(x = IncomeCategory, y = TotalTechConcern)) +
geom_boxplot() +
labs(
x = "Income Category", y = "Total Tech Concern",
title = "Fig. 5: Total Tech Concern across Income Categories"
) +
theme_minimal()
# Using renv restore function to get dependencies
library(renv)
restore()
#Load required packages
library(ggplot2)
library(dplyr)
library(readr)
library(here)
library(skimr)
ggplot(data = SurveyData, aes(x = IncomeCategory, y = TotalTechConcern)) +
geom_boxplot() +
labs(
x = "Income Category", y = "Total Tech Concern",
title = "Fig. 5: Total Tech Concern across Income Categories"
) +
theme_minimal()
# ANOVA to test if differences in TotalTechConcern are statistically significant across IncomeCategory
anova_result <- aov(TotalTechConcern ~ IncomeCategory, data = SurveyData)
summary(anova_result)
# Using renv restore function to get dependencies
library(renv)
restore()
#Load required packages
library(ggplot2)
library(dplyr)
library(readr)
library(here)
library(skimr)
SurveyData <- read_csv(here("data","SurveyData.csv"), show_col_types = FALSE)
skim(SurveyData)
library(readr)
---
title: "Data Science Project EDA "
library(hms)
library(hms)
