"Low Income",
"Lower-Middle Income",
"Middle-Middle Income",
"Upper-Middle Income",
"High Income"
)
# Create the IncomeCategory variable
SurveyData$IncomeCategory <-
cut(
SurveyData$HouseholdIncome,
breaks = breaks,
labels = labels,
include.lowest = TRUE
)
# add var to the dataframe
write.csv(SurveyData, "SurveyData.csv", row.names = FALSE)
# TotalTechConcern calculated by summing all columns that start with 'Risk'
SurveyData <- SurveyData %>%
mutate(TotalTechConcern = rowSums(select(., starts_with("Risk"))))
# add var to the dataframe
write.csv(SurveyData, "SurveyData.csv", row.names = FALSE)
# Calculate the TotalTechBenefit by summing all columns that start with 'Benefit'
SurveyData <- SurveyData %>%
mutate(TotalTechBenefit = rowSums(select(., starts_with("Benefit")), na.rm = TRUE))
# add var to the dataframe
write.csv(dataf, "SurveyData.csv", row.names = FALSE)
# Calculate the TotalTechBenefit by summing all columns that start with 'Benefit'
SurveyData <- SurveyData %>%
mutate(TotalTechBenefit = rowSums(select(., starts_with("Benefit")), na.rm = TRUE))
# add var to the dataframe
write.csv(SurveyData, "SurveyData.csv", row.names = FALSE)
ggplot(data = SurveyData, aes(x = Age, y = TotalTechConcern)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", color = "blue") +
labs(
x = "Age", y = "Total Tech Concern",
title = "Correlation between Age and Total Tech Concern"
) +
theme_minimal()
# Calculate and print the correlation coefficient
correlation <-
cor.test(SurveyData$Age, SurveyData$TotalTechConcern, use = "complete.obs") # use handles missing values
print(correlation)
ggplot(data = SurveyData, aes(x = IncomeCategory, y = TotalTechConcern)) +
geom_boxplot() +
labs(
x = "Income Category", y = "Total Tech Concern",
title = "Total Tech Concern across Income Categories"
) +
theme_minimal()
# ANOVA to test if differences in TotalTechConcern are statistically significant across IncomeCategory
anova_result <- aov(TotalTechConcern ~ IncomeCategory, data = SurveyData)
summary(anova_result)
avail_pks <- available.packages()
deps <- tools::package_dependencies(packages = avail_pks[1:200, "Package"],
recursive = TRUE)
tibble(Package=names(deps),
data=map(deps, as_tibble)) %>%
unnest(data)
install.packages("styler")
library(styler)
library(styler)
styler:::style_active_file()
styler:::style_active_file()
# Using renv restore function to get dependencies
restore()
library(renv)
library(renv)
# Using renv restore function to get dependencies
restore()
# Calculating mean and median age
mean_age <-
mean(SurveyData$Age, na.rm = TRUE) # na.rm = TRUE ensures that NA values are removed
median_age <- median(SurveyData$Age, na.rm = TRUE)
cat(sprintf("Mean Age: %.2f, Median Age: %.2f", mean_age, median_age))
# Define labels for the income categories
breaks <- c(0, 200000, 600000, 1200000, 2000000, Inf)
labels <-
c(
"Low Income",
"Lower-Middle Income",
"Middle-Middle Income",
"Upper-Middle Income",
"High Income"
)
# Create the IncomeCategory variable
SurveyData$IncomeCategory <-
cut(
SurveyData$HouseholdIncome,
breaks = breaks,
labels = labels,
include.lowest = TRUE
)
# add var to the dataframe
write.csv(SurveyData, "SurveyData.csv", row.names = FALSE)
# Calculate the TotalTechBenefit by summing all columns that start with 'Benefit'
SurveyData <- SurveyData %>%
mutate(TotalTechBenefit = rowSums(select(., starts_with("Benefit")), na.rm = TRUE))
library(dplyr)
# Calculate the TotalTechBenefit by summing all columns that start with 'Benefit'
SurveyData <- SurveyData %>%
mutate(TotalTechBenefit = rowSums(select(., starts_with("Benefit")), na.rm = TRUE))
# add var to the dataframe
write.csv(SurveyData, "SurveyData.csv", row.names = FALSE)
ggplot(data = SurveyData, aes(x = Age, y = TotalTechConcern)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", color = "blue") +
labs(
x = "Age", y = "Total Tech Concern",
title = "Correlation between Age and Total Tech Concern"
) +
theme_minimal()
library(ggplot2)
ggplot(data = SurveyData, aes(x = Age, y = TotalTechConcern)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", color = "blue") +
labs(
x = "Age", y = "Total Tech Concern",
title = "Correlation between Age and Total Tech Concern"
) +
theme_minimal()
# Calculate and print the correlation coefficient
correlation <-
cor.test(SurveyData$Age, SurveyData$TotalTechConcern, use = "complete.obs") # use handles missing values
print(correlation)
library(ggplot2)
ggplot(data = SurveyData, aes(x = IncomeCategory, y = TotalTechConcern)) +
geom_boxplot() +
labs(
x = "Income Category", y = "Total Tech Concern",
title = "Total Tech Concern across Income Categories"
) +
theme_minimal()
# ANOVA to test if differences in TotalTechConcern are statistically significant across IncomeCategory
anova_result <- aov(TotalTechConcern ~ IncomeCategory, data = SurveyData)
summary(anova_result)
library(dplyr)
# TotalTechConcern calculated by summing all columns that start with 'Risk'
SurveyData <- SurveyData %>%
mutate(TotalTechConcern = rowSums(select(., starts_with("Risk"))))
# add var to the dataframe
write.csv(SurveyData, "SurveyData.csv", row.names = FALSE)
# Define labels for the income categories
breaks <- c(0, 200000, 600000, 1200000, 2000000, Inf)
labels <-
c(
"Low Income",
"Lower-Middle Income",
"Middle-Middle Income",
"Upper-Middle Income",
"High Income"
)
# Create the IncomeCategory variable
SurveyData$IncomeCategory <-
cut(
SurveyData$HouseholdIncome,
breaks = breaks,
labels = labels,
include.lowest = TRUE
)
# add var to the dataframe
write.csv(SurveyData, "SurveyData.csv", row.names = FALSE)
library(ggplot2)
# Histogram plot of Age with color based on Gender
SurveyData$Gender <- factor(SurveyData$Gender, levels = c("Male", "Female"))
ggplot(data = SurveyData, aes(x = Age, fill = Gender)) +
geom_histogram(
position = "stack",
binwidth = 3,
colour = "grey"
) +
labs(title = "Number of Male and Female by Age") +
theme_minimal()
# Calculating mean and median age
mean_age <-
mean(SurveyData$Age, na.rm = TRUE) # na.rm = TRUE ensures that NA values are removed
median_age <- median(SurveyData$Age, na.rm = TRUE)
cat(sprintf("Mean Age: %.2f, Median Age: %.2f", mean_age, median_age))
library(ggplot2)
library(dplyr)
# Gender distribution pie chart
SurveyData %>%
count(Gender) %>%
ggplot(aes(x = "", y = n, fill = Gender)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
scale_fill_brewer(palette = "Pastel1") +
theme_void() +
labs(title = "Gender Distribution") +
geom_text(aes(label = scales::percent(n / sum(n), accuracy = 0.1)),
position = position_stack(vjust = 0.5)
)
library(renv)
# Using renv restore function to get dependencies
restore()
library(readr)
SurveyData <- read_csv(here("data","SurveyData.csv"), show_col_types = FALSE)
library(readr)
library(here)
SurveyData <- read_csv(here("data","SurveyData.csv"), show_col_types = FALSE)
---
title: "Data Science Project EDA"
---
title: "Data Science Project EDA"
library(ggplot2)
ggplot(data = SurveyData, aes(x = IncomeCategory, y = TotalTechConcern)) +
geom_boxplot() +
labs(
x = "Income Category", y = "Total Tech Concern",
title = "Total Tech Concern across Income Categories"
) +
theme_minimal()
# ANOVA to test if differences in TotalTechConcern are statistically significant across IncomeCategory
anova_result <- aov(TotalTechConcern ~ IncomeCategory, data = SurveyData)
summary(anova_result)
library(ggplot2)
ggplot(data = SurveyData, aes(x = Age, y = TotalTechConcern)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", color = "blue") +
labs(
x = "Age", y = "Total Tech Concern",
title = "Correlation between Age and Total Tech Concern"
) +
theme_minimal()
# Calculate and print the correlation coefficient
correlation <-
cor.test(SurveyData$Age, SurveyData$TotalTechConcern, use = "complete.obs") # use handles missing values
print(correlation)
library(ggplot2)
ggplot(data = SurveyData, aes(x = Age, y = TotalTechConcern)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", color = "blue") +
labs(
x = "Age", y = "Total Tech Concern",
title = "Correlation between Age and Total Tech Concern"
) +
theme_minimal()
# Calculate and print the correlation coefficient
correlation <-
cor.test(SurveyData$Age, SurveyData$TotalTechConcern, use = "complete.obs") # use handles missing values
print(correlation)
View(SurveyData)
library(ggplot2)
ggplot(data = SurveyData, aes(x = Age, y = TotalTechConcern)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", color = "blue") +
labs(
x = "Age", y = "Total Tech Concern",
title = "Correlation between Age and Total Tech Concern"
) +
theme_minimal()
# Calculate and print the correlation coefficient
correlation <-
cor.test(SurveyData$Age, SurveyData$TotalTechConcern, use = "complete.obs") # use handles missing values
print(correlation)
library(readr)
library(here)
SurveyData <- read_csv(here("data","SurveyData.csv"), show_col_types = FALSE)
Diversifying Geographic Representation: The data is gathered from participants residing in India. As a result, generalizability is called into question. Conducting the survey in different countries or regions would provide comparative insights and reveal whether the trends observed are specific to India or more universally applicable.
---
title: "Data Science Project EDA"
library(readr)
library(here)
SurveyData <- read_csv(here("data","SurveyData.csv"), show_col_types = FALSE)
# Define labels for the income categories
breaks <- c(0, 200000, 600000, 1200000, 2000000, Inf)
labels <-
c(
"Low Income",
"Lower-Middle Income",
"Middle-Middle Income",
"Upper-Middle Income",
"High Income"
)
# Create the IncomeCategory variable
SurveyData$IncomeCategory <-
cut(
SurveyData$HouseholdIncome,
breaks = breaks,
labels = labels,
include.lowest = TRUE
)
# add var to the dataframe
write.csv(SurveyData, "SurveyData.csv", row.names = FALSE)
library(dplyr)
# Calculate the TotalTechBenefit by summing all columns that start with 'Benefit'
SurveyData <- SurveyData %>%
mutate(TotalTechBenefit = rowSums(select(., starts_with("Benefit")), na.rm = TRUE))
library(renv)
# Using renv restore function to get dependencies
restore()
library(readr)
library(here)
SurveyData <- read_csv(here("data","SurveyData.csv"), show_col_types = FALSE)
library(skimr)
skim(SurveyData)
library(skimr)
if (interactive()) {
View(head(SurveyData))
View(tail(SurveyData))
View(SurveyData)
}
library(ggplot2)
# Age distribution Histogram
ggplot(SurveyData, aes(x = Age)) +
geom_histogram(
bins = 20,
fill = "blue",
color = "black",
alpha = 0.7
) +
labs(x = "Age", y = "Count", title = "Distribution of Respondents' Age") +
theme_minimal()
library(ggplot2)
library(dplyr)
# Gender distribution pie chart
SurveyData %>%
count(Gender) %>%
ggplot(aes(x = "", y = n, fill = Gender)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
scale_fill_brewer(palette = "Pastel1") +
theme_void() +
labs(title = "Gender Distribution") +
geom_text(aes(label = scales::percent(n / sum(n), accuracy = 0.1)),
position = position_stack(vjust = 0.5)
)
# Calculating mean and median age
mean_age <-
mean(SurveyData$Age, na.rm = TRUE) # na.rm = TRUE ensures that NA values are removed
median_age <- median(SurveyData$Age, na.rm = TRUE)
cat(sprintf("Mean Age: %.2f, Median Age: %.2f", mean_age, median_age))
library(ggplot2)
# Histogram plot of Age with color based on Gender
SurveyData$Gender <- factor(SurveyData$Gender, levels = c("Male", "Female"))
ggplot(data = SurveyData, aes(x = Age, fill = Gender)) +
geom_histogram(
position = "stack",
binwidth = 3,
colour = "grey"
) +
labs(title = "Number of Male and Female by Age") +
theme_minimal()
# Define labels for the income categories
breaks <- c(0, 200000, 600000, 1200000, 2000000, Inf)
labels <-
c(
"Low Income",
"Lower-Middle Income",
"Middle-Middle Income",
"Upper-Middle Income",
"High Income"
)
# Create the IncomeCategory variable
SurveyData$IncomeCategory <-
cut(
SurveyData$HouseholdIncome,
breaks = breaks,
labels = labels,
include.lowest = TRUE
)
# add var to the dataframe
write.csv(SurveyData, "SurveyData.csv", row.names = FALSE)
library(dplyr)
# TotalTechConcern calculated by summing all columns that start with 'Risk'
SurveyData <- SurveyData %>%
mutate(TotalTechConcern = rowSums(select(., starts_with("Risk"))))
# add var to the dataframe
write.csv(SurveyData, "SurveyData.csv", row.names = FALSE)
library(dplyr)
# Calculate the TotalTechBenefit by summing all columns that start with 'Benefit'
SurveyData <- SurveyData %>%
mutate(TotalTechBenefit = rowSums(select(., starts_with("Benefit")), na.rm = TRUE))
# add var to the dataframe
write.csv(SurveyData, "SurveyData.csv", row.names = FALSE)
library(ggplot2)
ggplot(data = SurveyData, aes(x = Age, y = TotalTechConcern)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", color = "blue") +
labs(
x = "Age", y = "Total Tech Concern",
title = "Correlation between Age and Total Tech Concern"
) +
theme_minimal()
# Calculate and print the correlation coefficient
correlation <-
cor.test(SurveyData$Age, SurveyData$TotalTechConcern, use = "complete.obs") # use handles missing values
print(correlation)
library(ggplot2)
ggplot(data = SurveyData, aes(x = IncomeCategory, y = TotalTechConcern)) +
geom_boxplot() +
labs(
x = "Income Category", y = "Total Tech Concern",
title = "Total Tech Concern across Income Categories"
) +
theme_minimal()
# ANOVA to test if differences in TotalTechConcern are statistically significant across IncomeCategory
anova_result <- aov(TotalTechConcern ~ IncomeCategory, data = SurveyData)
summary(anova_result)
---
title: "Data Science Project EDA"
library(renv)
# Using renv restore function to get dependencies
restore()
library(readr)
library(here)
SurveyData <- read_csv(here("data","SurveyData.csv"), show_col_types = FALSE)
library(skimr)
skim(SurveyData)
library(skimr)
if (interactive()) {
View(head(SurveyData))
View(tail(SurveyData))
View(SurveyData)
}
library(ggplot2)
# Age distribution Histogram
ggplot(SurveyData, aes(x = Age)) +
geom_histogram(
bins = 20,
fill = "blue",
color = "black",
alpha = 0.7
) +
labs(x = "Age", y = "Count", title = "Distribution of Respondents' Age") +
theme_minimal()
library(ggplot2)
library(dplyr)
# Gender distribution pie chart
SurveyData %>%
count(Gender) %>%
ggplot(aes(x = "", y = n, fill = Gender)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
scale_fill_brewer(palette = "Pastel1") +
theme_void() +
labs(title = "Gender Distribution") +
geom_text(aes(label = scales::percent(n / sum(n), accuracy = 0.1)),
position = position_stack(vjust = 0.5)
)
# Calculating mean and median age
mean_age <-
mean(SurveyData$Age, na.rm = TRUE) # na.rm = TRUE ensures that NA values are removed
median_age <- median(SurveyData$Age, na.rm = TRUE)
cat(sprintf("Mean Age: %.2f, Median Age: %.2f", mean_age, median_age))
library(ggplot2)
# Histogram plot of Age with color based on Gender
SurveyData$Gender <- factor(SurveyData$Gender, levels = c("Male", "Female"))
ggplot(data = SurveyData, aes(x = Age, fill = Gender)) +
geom_histogram(
position = "stack",
binwidth = 3,
colour = "grey"
) +
labs(title = "Number of Male and Female by Age") +
theme_minimal()
# Define labels for the income categories
breaks <- c(0, 200000, 600000, 1200000, 2000000, Inf)
labels <-
c(
"Low Income",
"Lower-Middle Income",
"Middle-Middle Income",
"Upper-Middle Income",
"High Income"
)
# Create the IncomeCategory variable
SurveyData$IncomeCategory <-
cut(
SurveyData$HouseholdIncome,
breaks = breaks,
labels = labels,
include.lowest = TRUE
)
# add var to the dataframe
write.csv(SurveyData, "SurveyData.csv", row.names = FALSE)
library(dplyr)
# TotalTechConcern calculated by summing all columns that start with 'Risk'
SurveyData <- SurveyData %>%
mutate(TotalTechConcern = rowSums(select(., starts_with("Risk"))))
# add var to the dataframe
write.csv(SurveyData, "SurveyData.csv", row.names = FALSE)
library(dplyr)
# Calculate the TotalTechBenefit by summing all columns that start with 'Benefit'
SurveyData <- SurveyData %>%
mutate(TotalTechBenefit = rowSums(select(., starts_with("Benefit")), na.rm = TRUE))
# add var to the dataframe
write.csv(SurveyData, "SurveyData.csv", row.names = FALSE)
library(ggplot2)
ggplot(data = SurveyData, aes(x = Age, y = TotalTechConcern)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", color = "blue") +
labs(
x = "Age", y = "Total Tech Concern",
title = "Correlation between Age and Total Tech Concern"
) +
theme_minimal()
# Calculate and print the correlation coefficient
correlation <-
cor.test(SurveyData$Age, SurveyData$TotalTechConcern, use = "complete.obs") # use handles missing values
print(correlation)
library(ggplot2)
ggplot(data = SurveyData, aes(x = IncomeCategory, y = TotalTechConcern)) +
geom_boxplot() +
labs(
x = "Income Category", y = "Total Tech Concern",
title = "Total Tech Concern across Income Categories"
) +
theme_minimal()
# ANOVA to test if differences in TotalTechConcern are statistically significant across IncomeCategory
anova_result <- aov(TotalTechConcern ~ IncomeCategory, data = SurveyData)
summary(anova_result)
